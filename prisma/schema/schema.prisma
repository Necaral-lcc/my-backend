generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins", "prismaSchemaFolder"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  name        String?
  age         Int?
  password    String?
  phone       String?
  address     String?
  description String?
  sex         Gender    @default(Unknown)
  deletedFlag Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  posts       Post[]
  articles    Article[] @relation("UserWriteArticle")
  Order       Order[]   @relation("CustomerToOrder")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  published Boolean  @default(false)
  viewCount Int      @default(0)
  authorId  Int?
  author    User?    @relation(fields: [authorId], references: [id])

  @@index([authorId], map: "Post_authorId_fkey")
}

model Article {
  id          Int           @id @default(autoincrement())
  title       String
  content     String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  deletedFlag Boolean       @default(false)
  authorId    Int?
  author      User?         @relation("UserWriteArticle", fields: [authorId], references: [id])
  tags        Tag[]         @relation("ArticleToTag")
  examing     ExamingStatus @default(Saved)
  publishedAt DateTime?
}

model Tag {
  id          Int       @id @default(autoincrement())
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedFlag Boolean   @default(false)
  articles    Article[] @relation("ArticleToTag")
}

enum Gender {
  Unknown
  MALE
  FEMALE
}

enum ExamingStatus {
  Saved
  Pending
  Passed
  Refused
}
